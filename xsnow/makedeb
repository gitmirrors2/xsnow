#!/bin/bash
# parameter all: produce debs for i386-stretch, amd64=stretch, amd64-sid
curdir=$PWD
unset CXXFLAGS
version=`./getversion`
echo "version = $version"
tar=$PWD/../versions/xsnow-$version.tar.gz
dir=xsnow-$version
dsc=xsnow_$version-1.dsc
debdir=$PWD/../debian/xsnow-$version-deb
#for d in debian debian.disco debian.stretch debian.sid ; do
#   if [ -e $d/changelog ] ; then
#      sed -i "1s/(.*)/($version-1)/" $d/changelog   || exit 1
#   fi
#done
./maketar || exit 1
rm -rf $debdir
mkdir -p $debdir || exit 1
cd $debdir || exit 1
cp $tar . || exit 1
tar xf $tar || exit
cd $dir || exit
codename=`lsb_release -sc`
echo compat before $codename: `cat debian/compat` `grep Standards-Version debian/control`
cp debian.$codename/* debian || exit
echo compat after $codename: `cat debian/compat` `grep Standards-Version debian/control`
#dh_make --yes -s -f $tar
echo xxxxxxxxx dh_make
dh_make --yes -s --createorig
cd ..
echo xxxxxxxxx dpkg-source
dpkg-source -b $dir || exit 1
cd -
#debuild -us -uc --lintian-opts --profile debian || exit
echo xxxxxxxxx dpkg-buildpackage
dpkg-buildpackage -us -uc --check-command=lintian --check-option='--profile' --check-option=debian
if test "x$1" != xall ; then 
   cd ..
   rm -r $dir || exit 1
   echo $0 done
   exit 0
fi
cd ..
#for dist in amd64-sid ; do
#for dist in amd64-stretch ; do
for dist in amd64-sid i386-stretch amd64-stretch ; do
   debdirbuild=$curdir/../debian/xsnow-$version-deb-build.$dist
   rm -rf $debdirbuild
   mkdir -p $debdirbuild || exit 1
   workdir=`mktemp -d --tmpdir xsnow-pbuilder-$dist.XXXXXXX`
   echo building for $dist in $workdir ...
   cd $workdir || exit 1
   mkdir w || exit 1
   cd w || exit 1
   tar xf $tar || exit 1
   cd $dir || exit 1
   case $dist in
      *stretch*)
	 cp debian.stretch/* debian || exit 1
	 ;;
      *sid*)
	 cp debian.sid/* debian || exit 1
	 ;;
   esac
   dh_make --yes -s --createorig
   cd ..
   dpkg-source -b $dir || exit 1
   sudo pbuilder --build --configfile /root/pbuilderrc.$dist --buildresult $debdirbuild $workdir/w/*dsc
   sudo chown -h $USER.$USER $debdirbuild/* || exit 1
   debsign $debdirbuild/*.changes || exit 1
done
rm -r $dir || exit 1
echo $0 done
